=== Sobre Controle de Versão
=== Sürüm Kontrolü Hakkında

(((version control)))
O que é ``controle de versão'', e porque deverias-te importar?
O controle de versão é um sistema que registra alterações num arquivo ou conjunto de arquivos ao longo do tempo para que te possas lembrar as versões específicas mais tarde.
Para os exemplos neste livro tu irás usar o código-fonte de software como os arquivos que estão sendo versão controlada, embora na realidade podes fazer isto com quase qualquer tipo de arquivo num computador.

(((version control)))
"Sürüm kontrolü" nedir ve neden ilgilenmelisin?
Sürüm denetimi, belirli bir sürümü daha sonra hatırlayabilmeniz için zamanla bir dosyaya veya dosyalara yapılan değişiklikleri kaydeden bir sistemdir.
Bu kitaptaki örnekler için yazılım kaynak kodunu sürüm denetimi yapılan dosyalar olarak kullanacaksınız, ancak gerçekte bunu bir bilgisayardaki hemen hemen her tür dosyayla yapabilirsiniz.

Se és um designer gráfico ou web designer e queres manter todas as versões de uma imagem ou layout (o que certamente deverias querer), um Sistema de Controle de Versão (VCS) é a coisa correta a ser usada.
Ele permite que revertas os arquivos de volta para um estado anterior, reverte todo o projeto de volta para um estado anterior, compara as mudanças ao longo do tempo, vê quem por último modificou algo que pode estar a causar um problema, quem introduziu um problema, quando, e muito mais.
Usar um VCS também significa que se tu estragares tudo ou perderes arquivos, podes facilmente recuperar.
Além disso, tens tudo isto por muito pouca sobrecarga.

Bir grafik tasarımcısı veya web tasarımcısı iseniz ve bir görüntünün veya düzenin (kesinlikle istemeniz gereken) tüm sürümlerini korumak istiyorsanız, Sürüm Kontrol Sistemi (VCS) kullanmanız gereken doğru şeydir.
Dosyaları önceki bir duruma geri döndürmenizi, tüm projeyi daha eski bir duruma geri döndürmenizi, değişiklikleri zamanla karşılaştırabilirsiniz, nihayetinde bir soruna neden olabilecek bir şeyi kimin tarafından değiştirildiğini görmekte, bir sorunu başlatan kişiye bakmanızı sağlar. , ne zaman ve daha fazlası.
Bir VCS kullanmak da, her şeye zarar verip dosyaları kaybettiğinizde kolayca kurtarabilirsiniz demektir.
Ayrıca, tüm bunlar çok az masrafa sahip olacak.

==== Sistemas Locais de Controle de Versão

==== Yerel Sürüm Kontrol Sistemleri

(((version control,local)))

O método de controle de versão de muitas pessoas é copiar os arquivos para outro diretório (talvez um diretório com carimbo de tempo, se eles forem espertos).
Esta abordagem é muito comum, porque é tão simples, mas também é incrivelmente propenso a erros.
É fácil esquecer em qual diretório te encontras e acidentalmente sobreescreveres o arquivo errado ou copiar arquivos que não queres.

(((version control,local)))

Birçok kişinin sürümü kontrol yöntemi, dosyaları başka bir klasöre kopyalamaktır (akıllıysa belki zaman damgalı bir dizin).
Bu yaklaşım çok yaygındır çünkü o kadar basittir ki hatalar inanılmaz derecede meyillidir.
Bulunduğunuz dizini unutmanız ve yanlışlıkla yanlış dosyanın üzerine yazmasını veya istemediğiniz dosyaları kopyalamanın kolay olması gerekir.

Para lidar com este problema, programadores há muito tempo desenvolveram VCSs locais que tem uma base de dados simples que mantêm todas as alterações nos arquivos sob controle de revisão.

Bu sorunu çözmek için programcılar, gözden geçirme denetimi altındaki dosyalardaki tüm değişiklikleri saklamanın basit bir veritabanına sahip yerel VCS'leri geliştirmiştir.

.Controle de versão local.
image::images/local.png[Local version control diagram]
Yerel sürümü kontrol edin.
image :: images / local.png [Yerel sürüm kontrol diyagramı]

Uma das ferramentas VCS mais populares foi um sistema chamado RCS, que ainda nos dias de hoje é distribuído com muitos computadores.
Até mesmo o popular sistema operacional Mac OS X inclui o comando `rcs` quando instalas as Ferramentas de Desenvolvimento.
RCS funciona mantendo conjuntos de alterações (ou seja, as diferenças entre os arquivos) num formato especial no disco; ele pode, em seguida, re-criar como qualquer arquivo se parecia em qualquer ponto no tempo, adicionando-se todas as alterações.

En popüler VCS araçlarından biri, bugün hala birçok bilgisayar ile dağıtılan RCS adlı bir sistemdi.
Popüler Mac OS X işletim sistemi bile Geliştirme Araçları'nı yüklediğinizde `rcs` komutunu içerir.
RCS, disk üzerinde özel bir formatta değişiklik setleri (yani dosyalar arasındaki farklar) tutarak çalışır; herhangi bir değişikliği ekleyerek zaman içindeki herhangi bir noktaya bakarsa, herhangi bir dosya olarak yeniden yaratabilir.

==== Sistemas Centralizados de Controle de Versão

==== Merkezi Sürüm Kontrol Sistemleri

(((version control,centralized)))
A próxima questão importante que as pessoas encontram é que elas precisam colaborar com desenvolvedores em outros sistemas.
Para lidar com este problema, foram desenvolvidos Sistemas Centralizados de Controle de Versão (CVCSs).
Estes sistemas, tais como CVS, Subversion e Perforce, têm um único servidor que contém todos os arquivos de controle de versão, e um número de clientes que usam arquivos a partir desse lugar central. (((CVS))) (((Subversion))) (((Perforce)))
Por muitos anos, este tem sido o padrão para controle de versão.

(((version control,centralized)))
İnsanların karşılaştıkları bir sonraki önemli soru, geliştiricilerle diğer sistemlerde işbirliği yapmaları gerektiğidir.
Bu sorunu çözmek için Merkezi Sürüm Kontrol Sistemleri (CVCS'ler) geliştirildi.
CVS, Subversion ve Perforce gibi bu sistemler, tüm sürüm kontrol dosyalarını içeren tek bir sunucuya ve bu merkezi yerden dosyaları kullanan bir dizi müşteriye sahiptir. ((((CVS))) (((Subversion))) ((((Perforce)))
Uzun yıllardır sürüm kontrolü için standart olmuştur.

.Controle de versão centralidado.
image::images/centralized.png[Centralized version control diagram]

.Merkezi sürümü kontrol edin.
image :: images / centralized.png [Merkezi sürüm kontrol diyagramı]

Esta configuração oferece muitas vantagens, especialmente sobre VCSs locais.
Por exemplo, todo a gente sabe, até um certo ponto o que toda a ente está a fazer no projeto.
Os administradores têm controle refinado sobre quem pode fazer o que; e é muito mais fácil de administrar um CVCS do que lidar com bases de dados locais em cada cliente.
Bu yapılandırma, özellikle yerel VCS'ler üzerinde birçok avantaj sunmaktadır.
Örneğin, herkes bir noktaya kadar tüm varlığın projede ne yaptığını bilir.
Yöneticiler, kimin neyi yapabileceği konusunda hassas denetime sahiptir; ve her istemcide yerel veritabanları ile uğraşmaktan çok CVCS'yi yönetmek daha kolaydır.

No entanto, esta configuração também tem algumas desvantagens graves.
O mais óbvio é o ponto único de falha que o servidor centralizado representa.
Se este servidor der problemas por uma hora, durante esta hora ninguém pode colaborar ou guardar as alterações da versão para o que quer que eles estejam a trabalhar.
Se o disco rígido da base de dados central for corrompido, e backups apropriados não foram mantidos, tu perdes absolutamente tudo - toda a história do projeto, exceto imagens pontuais que os desenvolvedores possam ter nas suas máquinas locais.
Sistemas VCS locais sofrem com este mesmo problema - sempre que tu tenhas toda a história do projeto num único lugar, há o risco de perder tudo.
Bununla birlikte, bu konfigürasyonun bazı ciddi dezavantajları da var.
En belirgin, merkezi sunucunun temsil ettiği tek başarısızlık noktasıdır.
Bu sunucu bir saat boyunca sorunlara neden olursa, bu süre boyunca hiç kimse işbirliği yapamaz veya sürüm değişikliklerini üzerinde çalıştıklarına kaydedemez.
Merkezi veritabanının sabit sürücüsü bozulursa ve uygun yedeklemeler korunmadıysa, geliştiricilerin yerel makinelerinde alabilecekleri zamanlı görüntüler hariç olmak üzere, her şeyi - tüm proje geçmişi - kaybedersiniz.
Yerel VCS sistemleri aynı problemden muzdariptir - tüm proje geçmişi tek bir yerde olduğunda, her şeyi kaybetme riski taşırsınız

==== Sistemas Distribuídos de Controle de Versão

==== Dağıtılmış Sürüm Kontrol Sistemleri

(((version control,distributed)))
É aqui que os Sistemas Distribuídos de Controle de Versão (DVCS) entram em cena.
Num DVCS (como Git, Mercurial, Bazaar ou Darcs), os clientes não somente usam o estado mais recente dos arquivos: eles duplicam localmente repositório completo.
Assim, se qualquer servidor morrer, e estes sistemas estiverem a colaborar por meio dele, qualquer um dos repositórios de clientes pode ser copiado de volta para o servidor para restaurá-lo.
Cada clone é de fato um backup completo de todos os dados.
(((version control,distributed)))
Burası Dağıtılmış Sürüm Kontrol Sistemleri (DVCS) devreye giriyor.
Bir DVCS'de (Git, Mercurial, Çarşı veya Darcs gibi), müşteriler yalnızca dosyaların en son durumunu kullanmakla kalmaz: tüm depoyu yerel olarak çoğaltırlar.
Dolayısıyla, herhangi bir sunucu ölürse ve bu sistemler onunla işbirliği yapıyorsa, istemci havuzlarından herhangi biri, onu geri yüklemek için sunucuya kopyalanabilir.
Her klon aslında tüm verilerin tam bir yedektir.

.Controle de versão distribuído.
image::images/distributed.png[Distributed version control diagram]
Dağıtılmış sürüm kontrolü.
image :: images / distributed.png [Dağıtılmış sürüm kontrol diyagramı]

Além disso, muitos destes sistemas trabalham muito bem com os vários repositórios remotos, tal que possas colaborar em diferentes grupos de pessoas de maneiras diferentes ao mesmo tempo dentro do mesmo projeto.
Isso permite que configures vários tipos de fluxos de trabalho que não são possíveis em sistemas centralizados, como modelos hierárquicos.
Buna ek olarak, bu sistemlerin birçoğu çeşitli uzak havuzlarla çok iyi çalışır; bu nedenle aynı projede aynı anda farklı gruplar halinde farklı şekillerde işbirliği yapabilirsiniz.
Bu, hiyerarşik modeller gibi merkezi sistemlerde mümkün olmayan çeşitli iş akışlarını yapılandırmanıza olanak tanır.
